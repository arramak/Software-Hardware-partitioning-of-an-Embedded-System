//*****************************************************************************
//*****************************************************************************
//  FILENAME:  ADCINCVR.h
//  Version: 4.00, Updated on 2014/7/14 at 8:4:12
//  Generated by PSoC Designer 5.4.2946
//
//  DESCRIPTION:  ADCINCVR User Module C Language interface file.
//-----------------------------------------------------------------------------
//      Copyright (c) Cypress Semiconductor 2014. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef ADCINCVR_INCLUDE
#define ADCINCVR_INCLUDE

#include <m8C.h>

//-------------------------------------------------
// Defines for ADCINCVR API's.
//-------------------------------------------------

// Power Setting Constants
#define ADCINCVR_OFF            0
#define ADCINCVR_LOWPOWER       1
#define ADCINCVR_MEDPOWER       2
#define ADCINCVR_HIGHPOWER      3

// Function Fastcall Pragmas
#pragma fastcall16 ADCINCVR_Start
#pragma fastcall16 ADCINCVR_SetPower
#pragma fastcall16 ADCINCVR_GetSamples
#pragma fastcall16 ADCINCVR_StopAD
#pragma fastcall16 ADCINCVR_Stop
#pragma fastcall16 ADCINCVR_fIsData
#pragma fastcall16 ADCINCVR_fIsDataAvailable
#pragma fastcall16 ADCINCVR_iGetData
#pragma fastcall16 ADCINCVR_iGetDataClearFlag
#pragma fastcall16 ADCINCVR_ClearFlag
#pragma fastcall16 ADCINCVR_SetResolution

//-------------------------------------------------
// Prototypes of the ADCINCVR API.
//-------------------------------------------------

extern void ADCINCVR_Start(BYTE bPower);
extern void ADCINCVR_SetPower(BYTE bPower);
extern void ADCINCVR_GetSamples(BYTE bNumSamples);
extern void ADCINCVR_StopAD(void);
extern void ADCINCVR_Stop(void);
extern CHAR ADCINCVR_fIsData(void);
extern CHAR ADCINCVR_fIsDataAvailable(void);
extern INT  ADCINCVR_iGetData(void);
extern INT  ADCINCVR_iGetDataClearFlag(void);
extern void ADCINCVR_ClearFlag(void);

extern void ADCINCVR_SetResolution(BYTE bResolution);

#define ADCINCVR_bNUMBITS  0x07

//-------------------------------------------------
// Hardware Register Definitions
//-------------------------------------------------

// Integrator Block Register Definitions
#pragma ioport  ADCINCVR_bfAtoDcr0: 0x090
BYTE            ADCINCVR_bfAtoDcr0;
#pragma ioport  ADCINCVR_bfAtoDcr1: 0x091
BYTE            ADCINCVR_bfAtoDcr1;
#pragma ioport  ADCINCVR_bfAtoDcr2: 0x092
BYTE            ADCINCVR_bfAtoDcr2;
#pragma ioport  ADCINCVR_bfAtoDcr3: 0x093
BYTE            ADCINCVR_bfAtoDcr3;

// Counter Block Register Definitions
#pragma ioport  ADCINCVR_fCounterFN:    0x120
BYTE            ADCINCVR_fCounterFN;
#pragma ioport  ADCINCVR_fCounterSL:    0x121
BYTE            ADCINCVR_fCounterSL;
#pragma ioport  ADCINCVR_fCounterOS:    0x122
BYTE            ADCINCVR_fCounterOS;
#pragma ioport  ADCINCVR_bCount:    0x020
BYTE            ADCINCVR_bCount;
#pragma ioport  ADCINCVR_bPeriod:   0x021
BYTE            ADCINCVR_bPeriod;
#pragma ioport  ADCINCVR_bCompare:  0x022
BYTE            ADCINCVR_bCompare;
#pragma ioport  ADCINCVR_bCounter_CR0:  0x023
BYTE            ADCINCVR_bCounter_CR0;


// PWM16 Block Register Definitions
#pragma ioport  ADCINCVR_bfPWM_LSB_FN:  0x124
BYTE            ADCINCVR_bfPWM_LSB_FN;
#pragma ioport  ADCINCVR_bfPWM_MSB_FN:  0x128
BYTE            ADCINCVR_bfPWM_MSB_FN;
#pragma ioport  ADCINCVR_fPWM_LSB_CR0:  0x027
BYTE            ADCINCVR_fPWM_LSB_CR0;
#pragma ioport  ADCINCVR_fPWM_MSB_CR0:  0x02b
BYTE            ADCINCVR_fPWM_MSB_CR0;
#pragma ioport  ADCINCVR_bPWM_Count_MSB:    0x028
BYTE            ADCINCVR_bPWM_Count_MSB;
#pragma ioport  ADCINCVR_bPWM_Count_LSB:    0x024
BYTE            ADCINCVR_bPWM_Count_LSB;
#pragma ioport  ADCINCVR_bPWM_Period_MSB:   0x029
BYTE            ADCINCVR_bPWM_Period_MSB;
#pragma ioport  ADCINCVR_bPWM_Period_LSB:   0x025
BYTE            ADCINCVR_bPWM_Period_LSB;
#pragma ioport  ADCINCVR_bPWM_IntTime_MSB:  0x02a
BYTE            ADCINCVR_bPWM_IntTime_MSB;
#pragma ioport  ADCINCVR_bPWM_IntTime_LSB:  0x026
BYTE            ADCINCVR_bPWM_IntTime_LSB;
#pragma ioport  ADCINCVR_bfPWM_LSB_FN:  0x124
BYTE            ADCINCVR_bfPWM_LSB_FN;
#pragma ioport  ADCINCVR_bfPWM_MSB_FN:  0x128
BYTE            ADCINCVR_bfPWM_MSB_FN;

#endif
// end of file ADCINCVR.h
